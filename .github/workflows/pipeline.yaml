name: CI Pipiline
on:
  workflow_dispatch:
jobs:
  build_test_push_image:
    name: Build, Test and Push Docker image
    runs-on: ubuntu-latest
    permissions:
      packages: write
      contents: read
    steps:
      - name: Check out the repository
        uses: actions/checkout@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v2
        with:
          registry: jfrog.it-academy.by
          username: ${{ secrets.JFROG_USER }}
          password: ${{ secrets.JFROG_PASS }}
      - name: Run Hadolint
        uses: hadolint/hadolint-action@v2.0.0
        with:
          dockerfile: Dockerfile
      - name: Build the Docker image
        run: docker build --file ./Dockerfile --tag jfrog.it-academy.by/public/nginx-fpm-wordpress:${{ github.sha }} .
      - name: Run the NodeJS App
        run: docker run --name wordpress -p 8080:8080 -d jfrog.it-academy.by/public/nginx-fpm-wordpress:${{ github.sha }}
      - name: Setup Curl
        run: sudo apt install curl
      - name: Test Request
        run: curl http://localhost:8080 -v
      - name: Non-root check for Docker image
        uses: wetransform/gha-docker-nonroot@v1.0.3
        with:
          image-ref: jfrog.it-academy.by/public/nginx-fpm-wordpress:${{ github.sha }}
          fail-for-root: true
      - name: Build and push image
        uses: docker/build-push-action@v3
        with:
          context: ./
          push: true
          tags: jfrog.it-academy.by/public/nginx-fpm-wordpress:${{ github.sha }}
  notification:
    needs: build_test_push_image
    runs-on: ubuntu-latest
    steps:
    - name: Slack Notification
      uses: rtCamp/action-slack-notify@v2
      env:
        SLACK_CHANNEL: all-slack
        SLACK_COLOR: ${{ job.status }}
        SLACK_MESSAGE: "Docker image is ready jfrog.it-academy.by/public/nginx-fpm-wordpress:${{ github.sha }}"
        SLACK_TITLE: Docker image build status
        SLACK_USERNAME: GitHub
        SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
